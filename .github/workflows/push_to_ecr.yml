name: Deploy to ECR

on: 
  push:
    branches: [ master ]

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Login to Amazon ECR
      id:   login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_REGION: us-east-1

    - name: Set IMAGE_TAG
      id:   set-image-tag
      run: echo "::set-output name=tag::v${{ steps.set-image-tag.outputs.tag }}"

    - name: Build, test, tag, and push images to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY_WEB: clo835-webapp-image
        ECR_REPOSITORY_DB: clo835-mysql-image
        IMAGE_TAG: ${{ steps.set-image-tag.outputs.tag }}
      run: |
        ls -ltra
        # Docker build
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_WEB:$IMAGE_TAG .
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_DB:$IMAGE_TAG -f Dockerfile_mysql .
        
        # Docker push
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_WEB:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_DB:$IMAGE_TAG
